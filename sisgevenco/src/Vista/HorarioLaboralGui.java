/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;


import Control.CtrlCiudad;
import Control.CtrlHorarioLaboral;
import Modelo.Ciudad;
import Modelo.HorarioLaboral;
import java.sql.Time;
import java.util.Date;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author JEFERSSON
 */
public class HorarioLaboralGui extends javax.swing.JDialog {
 
  //VARIABLES GLOBALES EN TODA ESTA CLASE  
  CtrlCiudad objCtrlC=new CtrlCiudad();
  CtrlHorarioLaboral objCtrlHl=new CtrlHorarioLaboral();
            
  DefaultTableModel modelo;//modelo de datos
  TableRowSorter<TableModel> elqueOrdena;
  
    public HorarioLaboralGui(java.awt.Frame parent, boolean modal) {// constructor de la GUI
        super(parent, modal);
        initComponents();
        txDescHora.setLineWrap(true); //Teóricamente corta las líneas automáticamente si no caben el JTEXTAREA. 
        objCtrlHl.cargarCBHora(cbxHora);
        objCtrlHl.cargarCBMinutos(cbxMin);
        objCtrlHl.cargarCBHora(cbxHoraF);
        objCtrlHl.cargarCBMinutos(cbxMinF);
        txtIdHorario.setVisible(false);
        
        btnEliminar.setEnabled(false);//desactiva el boton
        btnEditar.setEnabled(false);//desactiva el boton
        setLocationRelativeTo(null);//centra la ventana
        EsconderColumnaCodigo();
        traerDatosTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHorarioLaboral = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        txtIdHorario = new javax.swing.JTextField();
        cbxHora = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cbxMin = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbxMinF = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        cbxHoraF = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txDescHora = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("GESTION HORARIO LABORAL");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(61, 61, 61))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel2.setText("Hora Inicio:");

        btnGuardar.setBackground(new java.awt.Color(25, 115, 14));
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(241, 100, 14));
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        tblHorarioLaboral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idHorario", "Hora Inicio", "Hora Fin", "Descripcion Hora"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHorarioLaboral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHorarioLaboralMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHorarioLaboral);

        btnEliminar.setBackground(new java.awt.Color(227, 9, 42));
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        txtIdHorario.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText(":");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText(":00");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText(":00");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText(":");

        jLabel3.setText("Hora Fin:");

        jLabel9.setText("Descripcion horario:");

        txDescHora.setColumns(20);
        txDescHora.setRows(5);
        jScrollPane2.setViewportView(txDescHora);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnGuardar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbxHora, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbxMin, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))
                                    .addComponent(txtIdHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbxHoraF, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbxMinF, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8))
                                    .addComponent(jLabel9)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(txtIdHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(cbxMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxHoraF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(cbxMinF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
      guardar();//llamamos al metodo guardar() que mas abajo esta todo lo que contiene
    }//GEN-LAST:event_btnGuardarActionPerformed
    
      public void guardar(){// metodo que ejecuta algo en este caso instrucciones para insertar en la base de datos      
        HorarioLaboral objHl=new HorarioLaboral();//creamos el objeto a partir de la clase Barrio
        String horaI=cbxHora.getSelectedItem().toString();
        String minI=cbxMin.getSelectedItem().toString();
        String horaInicio=horaI+":"+minI+":00";
        
        String horaF=cbxHoraF.getSelectedItem().toString();
        String minF=cbxMinF.getSelectedItem().toString();
        String horaFin=horaF+":"+minF+":00";
        
        objHl.setHoraInicio(Time.valueOf(horaInicio));
        objHl.setHoraFin(Time.valueOf(horaFin));
        objHl.setHoraDesc(txDescHora.getText());
                
        
        if(objCtrlHl.guardar(objHl)){// como el metodo guardar nos arroja true o false lo metemos en esta condicion
            //si todo salio bien al momento de insertar nos arroja true y entra a las siguientes acciones
            JOptionPane.showMessageDialog(null,"El horario laboral se registro!");//mensaje
            borrarJtable();//Hacemos un llamado al metodo borrarJtable(); esto con el fin de hacer el efecto de actualizar el table
            traerDatosTable();//hacemos el llamado del metodo traerDatos que nos traer todo la lista de barrios de la BD
            //como arriba borramos todo lo que habia en el table con esto volvemos a traer datos dando el efecto de actualizar
            limpiar();//hacemos el llamado del metodo limpiar que lo que hace es limpiar los campos idBarrio(escondido),nombre,comuna
             btnGuardar.setEnabled(false);//si existe algo en el jtextfield activa el boton guardar
            btnEliminar.setEnabled(false);
            btnEditar.setEnabled(false);  
        }else{
           JOptionPane.showMessageDialog(null,"El horario laboral NO Fue Registrado!");  
         }      
    }
    
    //este metodo es propio del JTable es decir usamos el evento MouseClicked que no es mas que cada vez que hacemos click en 
    //una fila sucede algo y ese algo es lo que hay dentro de este metodo  
    private void tblHorarioLaboralMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHorarioLaboralMouseClicked
            int filasele=0;//variable entera que contendra el numero de la variable donde dimos click
            filasele=tblHorarioLaboral.getSelectedRow();//nos arroja el numero da fila seleccionada que empieza de 0 a n filas

            txtIdHorario.setText(tblHorarioLaboral.getValueAt(filasele, 0).toString());
            posicioneCBHoraI(tblHorarioLaboral.getValueAt(filasele, 1).toString().substring(0,2));
            posicioneCBMinI(tblHorarioLaboral.getValueAt(filasele, 1).toString().substring(3,5));
            
            posicioneCBHoraF(tblHorarioLaboral.getValueAt(filasele, 2).toString().substring(0,2));
            posicioneCBMinF(tblHorarioLaboral.getValueAt(filasele, 2).toString().substring(3,5));
            
            txDescHora.setText(tblHorarioLaboral.getValueAt(filasele, 3).toString());
            
            
            btnGuardar.setEnabled(false);//desactive el boton guardar
            btnEliminar.setEnabled(true);//activa el boton
            btnEditar.setEnabled(true);//activa el boton
            
    }//GEN-LAST:event_tblHorarioLaboralMouseClicked

     public void posicioneCBHoraI(String D){
        int n= cbxHora.getItemCount();
        String hora="";
        for(int i=0;i<n;i++){
            hora=cbxHora.getItemAt(i).toString();
            if(D.compareTo(hora)==0){
                cbxHora.setSelectedIndex(i);
                break;
            }
        }
    }
    
     public void posicioneCBMinI(String D){
        int n= cbxMin.getItemCount();
        String min="";
        for(int i=0;i<n;i++){
            min=cbxMin.getItemAt(i).toString();
            if(D.compareTo(min)==0){
                cbxMin.setSelectedIndex(i);
                break;
            }
        }
    }
     
    public void posicioneCBHoraF(String D){
        int n= cbxHoraF.getItemCount();
        String hora="";
        for(int i=0;i<n;i++){
            hora=cbxHoraF.getItemAt(i).toString();
            if(D.compareTo(hora)==0){
                cbxHoraF.setSelectedIndex(i);
                break;
            }
        }
    }
    
     public void posicioneCBMinF(String D){
        int n= cbxMinF.getItemCount();
        String min="";
        for(int i=0;i<n;i++){
            min=cbxMinF.getItemAt(i).toString();
            if(D.compareTo(min)==0){
                cbxMinF.setSelectedIndex(i);
                break;
            }
        }
    } 
     
     
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
       editar();//hacemos llamado del metodo editar() mas abajo esta!
    }//GEN-LAST:event_btnEditarActionPerformed
    
       public void editar(){// metodo editar que hace unas instrucciones para editar un registro
        HorarioLaboral objHl=new HorarioLaboral();// referenciamos el objeto Barrio
        int idHorario=Integer.valueOf(txtIdHorario.getText());//almacenamos en esta variable lo que hay en el txtfield oculto que tiene el idBario
        String horaI=cbxHora.getSelectedItem().toString();
        String minI=cbxMin.getSelectedItem().toString();
        String horaInicio=horaI+":"+minI+":00";
        
        String horaF=cbxHoraF.getSelectedItem().toString();
        String minF=cbxMinF.getSelectedItem().toString();
        String horaFin=horaF+":"+minF+":00";
        
        objHl.setIdHorario(idHorario);
        objHl.setHoraInicio(Time.valueOf(horaInicio));
        objHl.setHoraFin(Time.valueOf(horaFin));
        objHl.setHoraDesc(txDescHora.getText());
                
        if(objCtrlHl.modificar(objHl)){// validamos que se cumpla todo la modificacion recordemos que el metodo modificar arroja true o false
            JOptionPane.showMessageDialog(null,"El horario laboral se Edito con Exito!");
            //actualizamos el table
            borrarJtable();
            traerDatosTable();
            //limpiamos los campos textfield
            limpiar();
            
            btnGuardar.setEnabled(true);
            btnEliminar.setEnabled(false);
            btnEditar.setEnabled(false);  
        }else{
            JOptionPane.showMessageDialog(null,"El horario laboral No se Edito!");
        }   
        
    }
       
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       eliminar();//hacemos el llamado de el metodo ellimiar, abajo esta!
    }//GEN-LAST:event_btnEliminarActionPerformed
    public void eliminar(){
        int idHorario=Integer.valueOf(txtIdHorario.getText());//almacenamos en esta variable lo que hay en el txtfield oculto que tiene el idBario
        int rspta=JOptionPane.showConfirmDialog(null, "¿Esta seguro de Eliminar este Horario Laboral?",
                "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);//preguntamos si realmente quiere eliminar el barrio
        //esa respuesta la almacenamos en una variable entero puesto que este metodo nos arroja 0 si clickeamos Aceptar
        // y 1 si clickeamos Cancelar
        if(rspta==0){//comparamos la rspta, si se cumple hace lo siguiente
            if(objCtrlHl.eliminar(idHorario)){//recordemos que el metodo eliminar()arroja true o false si todo salio bien o mal
                JOptionPane.showMessageDialog(null,"Se elimino el Horario Laboral!");
                //actualizamos el jtable
                borrarJtable();
                traerDatosTable();
                //limpiamos los jtextfield
                limpiar();
                btnGuardar.setEnabled(true);
                btnEliminar.setEnabled(false);
                btnEditar.setEnabled(false); 
                
            }
        }
    }
    
        
     public void buscarEnTiempoReal(String texto){
        borrarJtable();//borro lo que hay en el JTABLE
        modelo=(DefaultTableModel)tblHorarioLaboral.getModel();
        elqueOrdena=new TableRowSorter<TableModel>(modelo);
        tblHorarioLaboral.setRowSorter(elqueOrdena);//con esto se puede ordenar por col el jtable de manera asc o desc
                        
        ArrayList<Ciudad> listado=new ArrayList();
        listado=objCtrlC.BusquedaTiempoReal(texto);
        Object []col=new Object[modelo.getColumnCount()];//creo un obj tipo Object del tamaño de las columnas de mi Table
        for(int index=0;index<listado.size();index++){//recorro el arrayList
            col[0]=listado.get(index).getCodigoCiudad();
            col[1]=listado.get(index).getNombre();
            col[2]=listado.get(index).getDepartamento();
                       
            modelo.addRow(col);
        } 
       
      tblHorarioLaboral.setModel(modelo);
         
     }
    
    public void limpiar(){
        txtIdHorario.setText("");
        cbxHora.setSelectedItem("00");
        cbxMin.setSelectedItem("00");
        cbxHoraF.setSelectedItem("00");
        cbxMinF.setSelectedItem("00");       
        txDescHora.setText("");
        
    }
    
    private void borrarJtable(){// este metodo limpia todo el jtable
        for (int i = tblHorarioLaboral.getRowCount() -1; i >= 0; i--){ 
                modelo.removeRow(i); 
        }      
    }
    
    public void traerDatosTable(){//como su nombre lo indica va a traer todos los datos en el jtable desde la base de datos
        modelo=(DefaultTableModel)tblHorarioLaboral.getModel();//nos arroja el modelo es decir el jtable
        elqueOrdena=new TableRowSorter<TableModel>(modelo);//ordena por columnas descendiente o ascendente lo que hay en el jtable
        tblHorarioLaboral.setRowSorter(elqueOrdena);//con esto se puede ordenar por col el jtable de manera asc o desc
                       
        ArrayList<HorarioLaboral> listado=new ArrayList();//declaramos e instanciamos un array list de tipo Barrio llamado listado
        listado=objCtrlHl.listadoHorarioLaboral();//almacenamos en listado lo que arroja el metodo listadoBarrio() que esta en la clase CtrlBarrio
        //recordemos que ese metodo lo que arroja es un arraylist(arrayList es como un vector mejorado mil veces) INVESTIGUEN MEJOR!
        Object []col=new Object[modelo.getColumnCount()];//creo un obj tipo Object del tamaño de las columnas de mi Table
               
       for(int index=0;index<listado.size();index++){//recorro el arrayList
                col[0]=listado.get(index).getIdHorario();
                col[1]=listado.get(index).getHoraInicio();
                col[2]=listado.get(index).getHoraFin();
                col[3]=listado.get(index).getHoraDesc();
                modelo.addRow(col);//añado el object a la fila
       }
     
    }
    
    public void EsconderColumnaCodigo(){
        //metodo para esconder la columna que contiene el codigo de los Barios
        tblHorarioLaboral.getColumnModel().getColumn(0).setMaxWidth(0);
        tblHorarioLaboral.getColumnModel().getColumn(0).setMinWidth(0);
        tblHorarioLaboral.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        tblHorarioLaboral.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HorarioLaboralGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HorarioLaboralGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HorarioLaboralGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HorarioLaboralGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HorarioLaboralGui dialog = new HorarioLaboralGui(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox cbxHora;
    private javax.swing.JComboBox cbxHoraF;
    private javax.swing.JComboBox cbxMin;
    private javax.swing.JComboBox cbxMinF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblHorarioLaboral;
    private javax.swing.JTextArea txDescHora;
    private javax.swing.JTextField txtIdHorario;
    // End of variables declaration//GEN-END:variables
}
